@page "{id}"
@using System.ComponentModel.DataAnnotations
@using BTCPayServer.Authentication.OpenId.Models
@using Microsoft.AspNetCore.Mvc.RazorPages
@using OpenIddict.Abstractions
@using OpenIddict.Core
@using OpenIddict.EntityFrameworkCore.Models
@model RevokeAuthorization


<section>
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <partial name="_StatusMessage" for="@Model.StatusMessage"/>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 text-center">
                <h2 class="section-heading">Revoke Authorization</h2>
                <hr class="primary">
                <h3>Are you sure you want to revoke this authorization for client @Model.Authorization.Application.DisplayName?</h3>

            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">

                <form method="post">
                    <div class="form-group">
                        <label asp-for="Authorization.Application.ClientId" class="control-label"></label>
                        <input asp-for="Authorization.Application.ClientId" readonly class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label asp-for="Authorization.Status" class="control-label"></label>
                        <input asp-for="Authorization.Status" readonly class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label asp-for="Authorization.Type" class="control-label"></label>
                        <input asp-for="Authorization.Type" readonly class="form-control"/>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Delete" class="btn btn-danger"/>

                        <a asp-page="Index" class="btn btn-default">Back to List</a>
                    </div>

                </form>
            </div>
        </div>
    </div>
</section>

@functions{

    public class RevokeAuthorization : PageModel
    {
        private readonly OpenIddictAuthorizationManager<BTCPayOpenIdAuthorization> _authorizationManager;
        [BindProperty(SupportsGet = true)]
        public string StatusMessage { get; set; }
        
        public BTCPayOpenIdAuthorization Authorization { get; set; }

        [BindProperty(SupportsGet = true)]
        public string Id { get; set; }


        public RevokeAuthorization(OpenIddictAuthorizationManager<BTCPayOpenIdAuthorization> authorizationManager)
        {
            _authorizationManager = authorizationManager;
        }

        public async Task<IActionResult> OnGetAsync()
        {
            Authorization = await _authorizationManager.FindByIdAsync(Id);
            if (Authorization == null)
            {
                return NotFound();
            }
            return Page();
        }

        public async Task<IActionResult> OnPostAsync()
        {
            try
            {
                Authorization = await _authorizationManager.FindByIdAsync(Id);
                await _authorizationManager.RevokeAsync(Authorization);
                return RedirectToPage("Authorizations", new {StatusMessage = $"Authorization revoked successfully"});
            }
            catch (Exception e)
            {
                StatusMessage = e.Message;
                return Page();
            }
        }
    }

}
