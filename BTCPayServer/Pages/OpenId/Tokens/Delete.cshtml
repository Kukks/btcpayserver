@page "{id}"
@using BTCPayServer.Authentication.OpenId.Models
@using BTCPayServer.Security
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages
@using OpenIddict.Core
@model RevokeToken


<section>
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <partial name="_StatusMessage" for="@Model.StatusMessage"/>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 text-center">
                <h2 class="section-heading">Revoke Token</h2>
                <hr class="primary">
                <h3>Are you sure you want to revoke this token for client @Model.Token.Application.DisplayName?</h3>

            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">

                <form method="post">
                    <div class="form-group">
                        <label asp-for="Token.Application.ClientId" class="control-label"></label>
                        <input asp-for="Token.Application.ClientId" readonly class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label asp-for="Token.Status" class="control-label"></label>
                        <input asp-for="Token.Status" readonly class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label asp-for="Token.CreationDate" class="control-label"></label>
                        <input asp-for="Token.CreationDate" readonly class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label asp-for="Token.Type" class="control-label"></label>
                        <input asp-for="Token.Type" readonly class="form-control"/>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Delete" class="btn btn-danger"/>

                        <a asp-page="Index" class="btn btn-default">Back to List</a>
                    </div>

                </form>
            </div>
        </div>
    </div>
</section>

@functions{
    [Authorize(AuthenticationSchemes = Policies.CookieAuthentication)]
    public class RevokeToken : PageModel
    {
        private readonly OpenIddictTokenManager<BTCPayOpenIdToken> _tokenManager;
        private readonly UserManager<ApplicationUser> _userManager;

        [BindProperty(SupportsGet = true)]
        public string StatusMessage { get; set; }
        
        public BTCPayOpenIdToken Token { get; set; }

        [BindProperty(SupportsGet = true)]
        public string Id { get; set; }


        public RevokeToken(
            OpenIddictTokenManager<BTCPayOpenIdToken> tokenManager, 
            UserManager<ApplicationUser> userManager )
        {
            _tokenManager = tokenManager;
            _userManager = userManager;
        }

        public async Task<IActionResult> OnGetAsync()
        {
            Token = await _tokenManager.FindByIdAsync(Id);
            
            if (Token == null || Token.Application.ApplicationUserId != _userManager.GetUserId(User))
            {
                return NotFound();
            }
            return Page();
        }

        public async Task<IActionResult> OnPostAsync()
        {
            try
            {
                Token = await _tokenManager.FindByIdAsync(Id);
                if (Token == null || Token.Application.ApplicationUserId != _userManager.GetUserId(User))
                {
                    return NotFound();
                }
                await _tokenManager.RevokeAsync(Token);
                return RedirectToPage("Tokens", new {StatusMessage = $"Token revoked successfully"});
            }
            catch (Exception e)
            {
                StatusMessage = e.Message;
                return Page();
            }
        }
    }

}
